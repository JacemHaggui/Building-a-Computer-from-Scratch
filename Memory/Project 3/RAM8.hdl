/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Direct the load signal to the correct register using the 3-bit address.
    DMux8Way(in=load, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);

    // Define eight 16-bit registers. Each register updates its value when its respective load signal is asserted.
    Register(in=in, load=a, out=r1); // Register 1
    Register(in=in, load=b, out=r2); // Register 2
    Register(in=in, load=c, out=r3); // Register 3
    Register(in=in, load=d, out=r4); // Register 4
    Register(in=in, load=e, out=r5); // Register 5
    Register(in=in, load=f, out=r6); // Register 6
    Register(in=in, load=g, out=r7); // Register 7
    Register(in=in, load=h, out=r8); // Register 8

    // Select the output of one of the eight registers based on the 3-bit address.
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address, out=out);
}
