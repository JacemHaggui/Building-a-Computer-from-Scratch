// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux4Way.hdl
/**
 * 4-way demultiplexor:
 * [a, b, c, d] = [in, 0, 0, 0] if sel = 00
 *                [0, in, 0, 0] if sel = 01
 *                [0, 0, in, 0] if sel = 10
 *                [0, 0, 0, in] if sel = 11
 */
CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // First stage: Use the most significant bit (sel[1]) to decide between two groups:
    // If sel[1] = 0, route the input to the "a,b" group by setting temp1 to 'in' and temp2 to '0'.
    // If sel[1] = 1, route the input to the "c,d" group by setting temp2 to 'in' and temp1 to '0'.
    DMux(in=in, sel=sel[1], a=temp1, b=temp2);

    // Second stage: Use the least significant bit (sel[0]) within each group to select the specific output:
    // For the "a,b" group (temp1), sel[0] decides whether 'a' or 'b' receives 'in'.
    // For the "c,d" group (temp2), sel[0] decides whether 'c' or 'd' receives 'in'.
    DMux(in=temp1, sel=sel[0], a=a, b=b);
    DMux(in=temp2, sel=sel[0], a=c, b=d);
}